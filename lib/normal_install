#!/bin/bash

function f_normal_installation() {
	
	# UPDATE MIRRORLIST
	#===============================================================================
	clear
	echo -e "==========================================================="
	echo -e "	\nUpdating Mirrorlist\n\nPlease do not close the terminal\nthis could take some time\n"
	echo -e "==========================================================="
	
	reflector --age 12 --protocol https --sort rate --save /etc/pacman.d/mirrorlist
	#===============================================================================


	# Install base pacages
	#===============================================================================
	f_pakage_install pakages_base
	f_pakage_install pakages_base_network
	f_pakage_install pakages_base_video
	f_pakage_install pakages_base_audio
	f_pakage_install pakages_base_desktop
	f_pakage_install pakages_base_cosmetik
	#===============================================================================



	# GO TO NO PASSWORD MODE
	#===============================================================================
	cp -f -v /mnt/etc/sudoers /mnt/etc/sudoers.back
	echo "%wheel ALL=(ALL) NOPASSWD: ALL" >> /mnt/etc/sudoers
	#===============================================================================



	# COPY system config FILES
	#===============================================================================
	mv -f -v $working_dir/lib/configs/btrfs/mkinitcpio.conf	/mnt/etc/mkinitcpio.conf
	#===============================================================================



	#GENERATE SYSTEM LOCALE
	#===============================================================================
	f_set_time

	case $LANGUAGE in
		English )
			f_set_english_language ;;
		German )
			f_set_german_language ;;
		Russian )
			f_set_russian_language ;;
	esac

	arch-chroot /mnt /bin/bash -c locale-gen
	#===============================================================================



	# Set hostname
	#===============================================================================
	echo "$HOSTNAME" > /mnt/etc/hostname
	#===============================================================================



	#Set ROOT
	#===============================================================================
	case $ROOTACCOUNT in
		yes )
			f_set_root_pw ;;
		no )
			arch-chroot /mnt /bin/bash -c "passwd -l root" ;;
	esac
	#===============================================================================



	# CREATE NEW USER
	#===============================================================================
	f_create_new_user
	#===============================================================================



	# Desktop installation
	#===============================================================================
	case $DESKTOP in
		i3 )
			f_install_desktop pakages_i3
			f_install_i3_cosmetics ;;
		
		xfce )
			f_install_desktop pakages_xfce4 ;;
		
		mate )
			f_install_desktop pakages_mate ;;
		
		gnome )
			f_install_desktop pakages_gnome ;;
		
		cinnamon )
			f_install_desktop pakages_cinnamon ;;
		
		"No Desktop" )
			;;
	esac
	#===============================================================================



	# Grafik driver installation
	#===============================================================================
	case $GRAFIKDRIVER in
		Virtualbox )
			pacstrap /mnt virtualbox-guest-dkms virtualbox-guest-utils ;;
		
		Nvidia )
			pacstrap /mnt nvidia-dkms ;;
		
		ATI )
			pacstrap /mnt xf86-video-ati ;;
		
		Intel )
			pacstrap /mnt xf86-video-intel ;;
		
		Nouveau )
			pacstrap /mnt xf86-video-nouveau ;;
		
		"No Video driver" )
			;;
	esac
	#===============================================================================



	# INSTALL yaourt
	#===============================================================================
	f_install_yaourt
	#===============================================================================



	# INSTALL YAOURT COSMETICS
	#===============================================================================
	f_install_yaourt_cosmetiks
	arch-chroot /mnt /bin/bash -c "sudo -u $USERNAME yaourt -S --noconfirm grub-btrfs"
	#===============================================================================



	# GO BACK TO  PASSWORD MODE
	#===============================================================================
	mv -f -v /mnt/etc/sudoers.back /mnt/etc/sudoers
	#===============================================================================



	# FIX USER HOME OWNERSHIP
	#===============================================================================
	arch-chroot /mnt /bin/bash -c "chown -R $USERNAME:users /home/$USERNAME"
	arch-chroot /mnt /bin/bash -c "chmod -R 0700 /home/$USERNAME"
	#===============================================================================

	


	# START DAEMONS
	#===============================================================================
	arch-chroot /mnt /bin/bash -c "systemctl enable acpid"
	arch-chroot /mnt /bin/bash -c "systemctl enable ntpd"

	# network managment
	arch-chroot /mnt /bin/bash -c "systemctl enable avahi-daemon"
	arch-chroot /mnt /bin/bash -c "systemctl enable wpa_supplicant"
	arch-chroot /mnt /bin/bash -c "systemctl enable NetworkManager"
	arch-chroot /mnt /bin/bash -c "systemctl enable sshd.socket"

	# NFS utils
	arch-chroot /mnt /bin/bash -c "systemctl enable rpcbind"

	# Cronie
	#arch-chroot /mnt /bin/bash -c "systemctl enable cronie.service"

	# lightdm
	arch-chroot /mnt /bin/bash -c "systemctl enable lightdm.service"
	#===============================================================================
	


	arch-chroot /mnt /bin/bash -c "btrfs subvol snapshot / /.snapshots/virgina"



	#GRUB INSTALLATION
	#===============================================================================
	if [[ -d "/sys/firmware/efi/efivars" ]];
		then
			# install grub efi
			arch-chroot /mnt /bin/bash -c "grub-install --efi-directory=/boot/efi --bootloader-id=Arch_$HOSTNAME"
		else
			# install grub legacy
			arch-chroot /mnt /bin/bash -c "grub-install /dev/$HDDNAME"
	fi

	# arch-chroot /mnt /bin/bash -c "grub-mkconfig -o /boot/grub/grub.cfg"
	#===============================================================================

	echo "set default=0" 																> /mnt/boot/grub/grub.cfg
	echo "set timeout=5" 																>> /mnt/boot/grub/grub.cfg
	echo "" 																			>> /mnt//boot/grub/grub.cfg
	echo "menuentry " "Arch Linux" "{" 													>> /mnt/boot/grub/grub.cfg
	echo "	insmod all_video" 															>> /mnt/boot/grub/grub.cfg
	echo "	insmod btrfs" 																>> /mnt/boot/grub/grub.cfg
	echo "" 																			>> /mnt/boot/grub/grub.cfg
	echo "	linux	/ROOT/boot/vmlinuz-linux root=LABEL=ROOT rw rootflags=subvol=ROOT" 	>> /mnt/boot/grub/grub.cfg
	echo "	initrd	/ROOT/boot/initramfs-linux.img" 									>> /mnt/boot/grub/grub.cfg
	echo "}" 																			>> /mnt/boot/grub/grub.cfg

	
	
	
	#cp -f -v /mnt/boot/vmlinuz-linux						/mnt/boot/vmlinuz-linux-virgina
	#cp -f -v /mnt/boot/initramfs-linux.img					/mnt/boot/initramfs-linux-virgina.img
	#cp -f -v /mnt/boot/initramfs-linux-fallback.img		/mnt/boot/initramfs-linux-fallback-virgina.img

}
