#!/bin/bash

function f_SetLanguage()
	{
		clear
		
		echo "============================================================================"
		echo -e "Please Select You language by entering the coresponding number\n"
		echo "1. German"
		echo "2. English"
		echo "3. Russian"
		
  		read -rsn1 input_4

  		if [ "$input_4" = "1" ]; then
    			LANGUAGE=german
  		elif [ "$input_4" = "2" ]; then
    			LANGUAGE=english
  		elif [ "$input_4" = "3" ]; then
    			LANGUAGE=russian
  		fi
  	}


function f_SetUserName()
	{
		clear
		
		echo 	"============================================================================"
		echo 	"Please enter username."
		echo -e "\n\n"
		echo 	"Note: Forbidden caracters: *[!@#\$%^\&*()_+].*"
		echo -n "Name: " ; read USERNAME
	}


function f_SetUserPassword()
	{
		clear
		
		echo 	"============================================================================"
		echo 	"Please enter the password for $USERNAME."
		echo -e "\n\n"
		echo 	"Note: Forbidden caracters: *[!@#\$%^\&*()_+].*"
		echo -n "Password: " ; read USERPASSWORD
	}


function f_SetRootAccount()
	{
		clear
	
		echo "============================================================================"
		echo "Activate root Account?"
		echo ""
		echo "1. no"
		echo "2. yes"

		read -rsn1 input_5

  		if [ "$input_5" = "1" ]; then
    			ROOTACCOUNT=no
  		elif [ "$input_5" = "2" ]; then
    			ROOTACCOUNT=yes
  		fi

  		case $ROOTACCOUNT in
  			yes )
				clear
		
				echo 	"============================================================================"
				echo 	"Please enter the root password"
				echo -e "\n\n"
				echo 	"Note: Forbidden caracters: *[!@#\$%^\&*()_+].*"
				echo -n "Password: " ; read ROOTPASSWORD
				;;
			no )
  				: ;;
  		esac

	}

function f_SetTimezone()
	{
		# SET TIME
		#====================================================================================
		# SET TIMEZONE
		ls -l /usr/share/zoneinfo/ | awk '{ if($1 ~ /d/ && $9 !~ /posix/ && $9 !~ /right/ && $9 !~ /Etc/) print $9 " " ++s}' > /tmp/time_region_in

		dialog \
		--backtitle "PrimeArch Installer" \
		--title "Time setup" \
		--begin $BoxStartY $BoxStartX \
		--menu "\nSelect your regeon" 20 $BoxWhith 20 \
			$( awk '{ print }' < /tmp/time_region_in ) \
			2>/tmp/time_region_out

		TIMEZONE=$(awk '{print}' < /tmp/time_region_out)
		rm /tmp/time_region_out



		# SET SUBTIMEZONE
		ls -l /usr/share/zoneinfo/$TIMEZONE | awk 'NR>=2{ print $9 " " ++s }' > /tmp/time_subregion_in

		dialog \
		--backtitle "PrimeArch Installer" \
		--title "Time setup" \
		--begin $BoxStartY $BoxStartX \
		--menu "\nSelect your sub regeon" 20 $BoxWhith 20 \
			$( awk '{ print }' < /tmp/time_subregion_in ) \
			2>/tmp/time_subregion_out

		TIMESUBZONE=$(awk '{print}' < /tmp/time_subregion_out)
		rm /tmp/time_subregion_out



		# SET TIMEFORMAT
		dialog \
		--backtitle "PrimeArch Installer" \
		--title "Time setup" \
		--begin $BoxStartY $BoxStartX \
		--menu "\nSelect the time format" 11 $BoxWhith 2 \
			utc         1 \
			localtime   2 \
			2>/tmp/time_format

		TIMEFORMAT=$(awk '{print}' 	< /tmp/time_format)
		rm /tmp/time_format
		
		#====================================================================================
	}


function f_SetHostname()
	{
		clear
		
		echo 	"============================================================================"
		echo 	"Please enter the Hostname."
		echo -e "\n\n"
		echo 	"Note: Forbidden caracters: *[!@#\$%^\&*()_+].*"
		echo -n "Hostname: " ; read HOSTNAME
		
	}


function f_SetDesktop()
	{
		clear
		
		echo "============================================================================"
		echo "Please Select You Desktop"
		echo ""
		echo "1. i3"
		echo "2. Cinnamon"
		echo "3. Gnome"
		echo "4. XFce"
		echo "5. Mate"
		echo "6. No Desktop"
		
		read -rsn1 input_1

  		if [ "$input_1" = "1" ]; then
    		DESKTOP=i3
  		elif [ "$input_1" = "2" ]; then
    		DESKTOP=cinnamon
  		elif [ "$input_1" = "3" ]; then
    		DESKTOP=gnome
    	elif [ "$input_1" = "4" ]; then
    		DESKTOP=xfce
    	elif [ "$input_1" = "5" ]; then
    		DESKTOP=mate
    	elif [ "$input_1" = "6" ]; then
    		DESKTOP=nodesktop
  		fi
	}


function f_SetGrefikdriver()
	{
		clear
		
		echo "============================================================================"
		echo "Please Select You Grafik driver"
		echo ""
		echo "1. VirtualBox"
		echo "2. Nvidia"
		echo "3. Nouveau"
		echo "4. Ati"
		echo "5. Intel"
		echo "6. No Grafik"
			
		read -rsn1 input_2

  		if [ "$input_2" = "1" ]; then
    		GRAFIKDRIVER=virtualbox
  		elif [ "$input_2" = "2" ]; then
    		GRAFIKDRIVER=nvidia
  		elif [ "$input_2" = "3" ]; then
    		GRAFIKDRIVER=nouveau
    	elif [ "$input_2" = "4" ]; then
    		GRAFIKDRIVER=ati
    	elif [ "$input_2" = "5" ]; then
    		GRAFIKDRIVER=intel
    	elif [ "$input_2" = "6" ]; then
    		GRAFIKDRIVER=nografik
  		fi
	}


function f_set_swap_size()
	{
		clear

		echo "==========================================================================="
		echo "How mutch SWAP do you want"
		echo -e "1.\t1024 MB"
		echo -e "2.\t2048 MB"
		echo -e "3.\t4096 MB"
		echo -e "4.\t8192 MB"
		echo -e "5.\t16384 MB"
		
  		read -rsn1 input_6

  		if [ "$input_6" = "1" ]; then
    		SWAPSIZE=1024M
  		elif [ "$input_6" = "2" ]; then
    		SWAPSIZE=2048M
  		elif [ "$input_6" = "3" ]; then
    		SWAPSIZE=4096M
    	elif [ "$input_6" = "4" ]; then
    		SWAPSIZE=8192M
    	elif [ "$input_6" = "5" ]; then
    		SWAPSIZE=16384M
    	fi
}


function f_SetInstallmode()
	{
		clear
		
		echo "============================================================================"
		echo "Please Select You Instalation mod by entering the coresponding number"
		echo ""
		echo "1. Btrfs"
		echo "2. Root on ZFS"
		echo "3. Manual"
				
		read -rsn1 input_3

  		if [ "$input_3" = "1" ]; then
    		INSTALLMOD=btrfs
  		elif [ "$input_3" = "2" ]; then
    		INSTALLMOD=zfs
  		elif [ "$input_3" = "3" ]; then
    		INSTALLMOD=manual	
    	fi
	}


function f_SetHarddrive()
	{
		# read devices
		HDDLIST=$(lsblk -o NAME,SIZE,MODEL,TYPE | grep disk)
		clear

		echo "==========================================================================="
		echo -e "selekt harddrive for the installation\n"

		awk '{print NR": "$0}' <<< $HDDLIST
		#awk '{print NR}' <<< $HDDLIST
		echo -e "\n\n"

		read -rsn1 HDDNR

		HDDNAME=$(awk '{print}' < /tmp/)
	}
